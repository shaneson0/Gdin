
/*
    ACM协会做算法归根到底都是为了以后有利于做项目，但毕竟是针对ACM比赛的模板库，如果完全像项目那样冗长的话，又会得不偿失。所以应该模板库的代码，应该同时具备高可读性和简洁。另外ACM比赛是单个文件的，所以很多项目上的标准并不需要理会。
*/


(1)变量名要求：

1.变量名不能以'_'开头；

2.想使用形似系统保留字的名字时，例如queue,insert等，在后面加上数字，避免冲突；

3.使用“名词+名词”“动词+名词”这样的命名时，每个单词的首字母大写，其余字母小写；

5.i,j,k：循环变量；
  前缀p-：指针
  x,y,z：坐标
  tmp,temp：临时变量


(2)空格要求：

1.二目和三目运算符的左右要空一个空格，单目运算符则不用空格。

2.位于同一个括号以内的代码要左对齐，下一层代码用Tab键缩进。


(3)空行要求：

1.相同功能的函数体之间不空行；

2.不同功能的函数体之间空1行；

3.不同的模板之间空3行；


(4)注释要求：

1.变量首次出现时，写明其含义，并且要进行初始化。同一行不对多个变量进行初始化，便于注释；

2.在函数体或某个代码块的顶部写上其功能。

3.对整体功能的注释用/* */，对单个语句的注释用//

(5)括号要求：

1.即使循环或者if后只控制一个语句也要使用括号；

2.包含同一层代码的左括号和右括号要上下对齐；

(6)其余
1.不使用全局变量，而是使用参数传递；

2.类的定义里面仅作成员函数的声明，其具体实现应该在类的定义以外。
例子：
class Example
{
	private:
		int num;
	public:
		void SetNum(int);
		int GetNum();
};

Example::SetNum(int value)
{
......
}

Example::GetNum()
{
....
}



每个模板代码，要在前头加上编写人的信息，格式“年级+专业+姓名”。
例子：
/*
writer:
14计本黎威全
*/



